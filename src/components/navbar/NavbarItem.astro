---
const {name, href, Icon} = Astro.props;
---

<li>
  <a href={`#${href}`} class="menu__link">
    <span class="menu__icon">
      <Icon />
    </span>
    <span class="menu__text">{name}</span>
  </a>
</li>

<script>
  const sections = document.querySelectorAll("section");
  const navItems = document.querySelectorAll("header nav a");

  const callback = (entries: any[]) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        navItems.forEach(item => {
          if (item.getAttribute("href")?.replace("#", "") == entry.target.id) {
            item.classList.add("active");
          } else {
            item.classList.remove("active");
          }
        });
      }
    });
  };

  const observer = new IntersectionObserver(callback, {
    root: null,
    rootMargin: "0px",
    threshold: 0.35,
  });

  sections.forEach(section => {
    console.log(section);
    observer.observe(section);
  });

  // document.onvisibilitychange = () => {
  //   if (document.visibilityState === "hidden") {
  //     console.log("disconnect");
  //     observer.disconnect();
  //   }
  // };
</script>

<style lang="scss">
  @use "./../../styles/mixins/mixins.scss" as *;
  .menu {
    &__link {
      font-size: var(--12px);
      line-height: initial;
      color: currentColor;
      display: flex;
      flex-direction: column;
      justify-content: center;
      position: relative;
      text-align: center;
      height: 100%;
      opacity: 0.8;
      transition: opacity var(--transition-time) ease-in-out;
      &.active {
        opacity: 1;
        border-bottom: 2px solid #fff;
      }
    }
    &__icon {
      left: 0;
      top: 0;
      svg {
        width: 18px;
        height: 18px;
      }
    }
  }

  @include media(md) {
    .menu {
      &__link {
        &:hover,
        &:focus-within {
          opacity: 1;
        }
      }
      &__icon {
        display: none;
      }
      &__text {
        font-size: var(--small-font-size);
      }
    }
  }
</style>
